
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author A
 */
public class theaterFrame extends javax.swing.JFrame {

    String rating, genre, category, seat, srhCtgry;
    int price, pr;

    DefaultTableModel dm;
    String[][] arr;
    String[][] tempArr;
    int length;

    /**
     * Creates new form theaterFrame
     */
    public theaterFrame() {
        initComponents();
        CreateColumns();
        dummyData();
        setResizable(false);
        jTable1.setEnabled(false);
    }

    private void CreateColumns() {
        dm = (DefaultTableModel) jTable1.getModel();
        //add columns to table
        dm.addColumn("Movie Code");
        dm.addColumn("Movie Name");
        dm.addColumn("Release Date");
        dm.addColumn("Time");
        dm.addColumn("Rating");
        dm.addColumn("Genre");
        dm.addColumn("Category");
        dm.addColumn("Auditorium");
        dm.addColumn("Seat");
        dm.addColumn("Price(Rs.)");
    }

    //add row data
    private void populate(String movCode, String movName, String rlsDate, String time, String rating, String genre, String category, String audi, String seat, String price) {
        String[] rowData = {movCode, movName, rlsDate, time, rating, genre, category, audi, seat, price};
        dm.addRow(rowData);
    }

    private void dummyData() {
        //input dummy or static data to the table
        populate("AS11", "Avengers", "04/15/2019", "8:00am", "Rated R", "fiction", "2D,3D", "audi3", "platinum", "350");
        populate("WD13", "DonBon", "02/12/2019", "12:00am", "Rated R", "Action", "2D", "audi1", "gold", "200");
        populate("QQ11", "Yatri", "01/13/2019", "5:00am", "Rated X", "Comedy", "2D", "audi1", "gold", "200");
        populate("WW11", "Jinbe", "07/22/2019", "1:00pm", "Rated G", "horror", "3D", "audi3", "platinum", "350");
        populate("EE11", "Fast & furious 15", "01/04/2019", "6:15am", "PG13", "action", "2D,3D", "audi3", "silver", "350");
        populate("AA11", "Justice league 2", "12/12/2019", "1:00am", "Rated X", "action", "2D", "audi2", "silver", "250");
        populate("SS11", "Aquaman 2", "0/15/2019", "8:00am", "Rated X", "action", "2D,3D", "audi3", "platinum", "350");
        populate("DD11", "Murder on the orient express", "04/15/2019", "8:00am", "PG13", "thriller", "2D", "audi1", "gold", "200");
        populate("FF11", "Killer Orca", "06/06/2019", "10:00am", "PG", "action", "3D", "audi3", "silver", "150");
        populate("GG11", "Fantastic four", "04/15/2019", "8:00am", "Rated X", "fiction", "2D,3D", "audi3", "platinum", "350");
        populate("HH11", "Saving Private Anthony", "03/27/2019", "4:00am", "PG13", "action", "3D", "audi3", "platinum", "550");
        populate("JJ11", "Dance the night away", "02/14/2019", "8:00am", "Rated X", "Romance", "2D", "audi1", "platinum", "350");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        movCodBox = new javax.swing.JTextField();
        movNamBox = new javax.swing.JTextField();
        timeBox = new javax.swing.JTextField();
        audiBox = new javax.swing.JTextField();
        priceBox = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        genreComboBox = new javax.swing.JComboBox<>();
        twodCheckBox = new javax.swing.JCheckBox();
        threedCheckBox = new javax.swing.JCheckBox();
        seatComboBox = new javax.swing.JComboBox<>();
        rlsDateBox = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        searchPriceBox = new javax.swing.JTextField();
        btnViewDetail = new javax.swing.JButton();
        searchTwodCheck = new javax.swing.JCheckBox();
        searchThreedCheck = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        setForeground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Movie Information"));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1117, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Information"));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Movie Code");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Movie Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Release Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Time");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Rating");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Category");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Auditorium");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Seat");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Price (Rs.)");

        movCodBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movCodBoxActionPerformed(evt);
            }
        });
        movCodBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movCodBoxKeyTyped(evt);
            }
        });

        movNamBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movNamBoxActionPerformed(evt);
            }
        });
        movNamBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movNamBoxKeyTyped(evt);
            }
        });

        timeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeBoxActionPerformed(evt);
            }
        });

        audiBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audiBoxActionPerformed(evt);
            }
        });
        audiBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                audiBoxKeyTyped(evt);
            }
        });

        priceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceBoxActionPerformed(evt);
            }
        });
        priceBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceBoxKeyTyped(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 153, 153));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(204, 204, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(153, 51, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Genre");

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("PG");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Rated R");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("Rated G");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setText("PG13");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton7);
        jRadioButton7.setText("Rated X");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Choose--", "Comedy", "fiction", "sci-fi", "horror", "thriller", "romance", "action" }));
        genreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreComboBoxActionPerformed(evt);
            }
        });

        buttonGroup2.add(twodCheckBox);
        twodCheckBox.setText("2D");
        twodCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twodCheckBoxActionPerformed(evt);
            }
        });

        buttonGroup2.add(threedCheckBox);
        threedCheckBox.setText("3D");
        threedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threedCheckBoxActionPerformed(evt);
            }
        });

        seatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Choose--", "Platinum", "Gold", "Silver" }));
        seatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxActionPerformed(evt);
            }
        });

        rlsDateBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rlsDateBoxActionPerformed(evt);
            }
        });
        rlsDateBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rlsDateBoxKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jRadioButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton5))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jRadioButton6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton7))
                                    .addComponent(movCodBox)
                                    .addComponent(movNamBox)
                                    .addComponent(timeBox)
                                    .addComponent(rlsDateBox)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(42, 42, 42)
                                .addComponent(priceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel11))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(twodCheckBox)
                                        .addGap(18, 18, 18)
                                        .addComponent(threedCheckBox))
                                    .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel12)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(77, 77, 77)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(audiBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(movCodBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(movNamBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rlsDateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(twodCheckBox)
                    .addComponent(threedCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(audiBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(seatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Movie"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Category");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Price (Rs.)");

        searchPriceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPriceBoxActionPerformed(evt);
            }
        });
        searchPriceBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchPriceBoxKeyTyped(evt);
            }
        });

        btnViewDetail.setBackground(new java.awt.Color(0, 153, 153));
        btnViewDetail.setText("View Details");
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        buttonGroup1.add(searchTwodCheck);
        searchTwodCheck.setText("2D");
        searchTwodCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTwodCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(searchThreedCheck);
        searchThreedCheck.setText("3D");
        searchThreedCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchThreedCheckActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 51, 0));
        jButton1.setText("Clear Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(searchTwodCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchThreedCheck)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchPriceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(46, 46, 46))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTwodCheck)
                    .addComponent(searchThreedCheck)
                    .addComponent(searchPriceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnViewDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("COUNTRYSIDE MOVIE THEATER");

        jMenuBar1.setMaximumSize(new java.awt.Dimension(80, 32769));

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("For Adding");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("For Searching");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(522, 522, 522)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void movCodBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movCodBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movCodBoxActionPerformed

    private void movNamBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movNamBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movNamBoxActionPerformed

    private void timeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeBoxActionPerformed

    private void audiBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audiBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_audiBoxActionPerformed

    private void priceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceBoxActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // sets rating to pg
        if (jRadioButton3.isSelected()) {
            rating = "PG";
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // exits the jframe:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // method to add movie information to the table:
        //gets the input from the text box and stores it in a variable
        String movCod = movCodBox.getText();
        String movName = movNamBox.getText();
        String rlsDate = rlsDateBox.getText();
        String time = timeBox.getText();
        String audi = audiBox.getText();

        //check the category and set the value to the variable
        if (twodCheckBox.isSelected()) {
            category = "2D";
        }
        if (threedCheckBox.isSelected()) {
            category = "3D";
        }

        //validation of the textboxes
        //checks whether the textboxes are empty or not
        try {
            if (!movCod.isEmpty()) {
                if (!movName.isEmpty()) {
                    if (!rlsDate.isEmpty()) {
                        if (!time.isEmpty()) {
                            if (!audi.isEmpty()) {
                                if (!priceBox.getText().isEmpty() && !priceBox.getText().contains("-") && Integer.parseInt(priceBox.getText()) >= 0) {
                                    price = Integer.parseInt(priceBox.getText());
                                    if (!rating.isEmpty()) {
                                        if (!genre.isEmpty()) {
                                            if (!category.isEmpty()) {
                                                if (!seat.isEmpty()) {

                                                    int rowCount = jTable1.getRowCount();

                                                    //will add value if jTable is Empty
                                                    if (rowCount == 0) {
                                                        populate(movCod, movName, rlsDate, time, rating, genre, category, audi, seat, String.valueOf(price));
                                                        JOptionPane.showMessageDialog(this, "Movie Added!");
                                                    }
                                                    //will add the value if jTable is not empty
                                                    if (rowCount != 0) {
                                                        int nextRow = 0;
                                                        boolean emptyFlag = false;
                                                        do {
                                                            if ((jTable1.getValueAt(nextRow, 0)) != null) {
                                                                nextRow++;
                                                            } else {
                                                                emptyFlag = true;
                                                            }
                                                        } while (nextRow < rowCount && !emptyFlag);

                                                        if (nextRow > 0) {
                                                            //checks whether the same movie is already inputted or not
                                                            boolean exists = false;
                                                            for (int i = 0; i < rowCount; i++) {
                                                                if (movCod.equalsIgnoreCase(jTable1.getValueAt(i, 0).toString()) || movName.equalsIgnoreCase(jTable1.getValueAt(i, 1).toString())) {
                                                                    exists = true;
                                                                    JOptionPane.showMessageDialog(this, "Module Code or Name already Exists");
                                                                }
                                                            }
                                                            if (exists == false) {
                                                                populate(movCod, movName, rlsDate, time, rating, genre, category, audi, seat, String.valueOf(price));
                                                                JOptionPane.showMessageDialog(this, "Movie Added!");
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    JOptionPane.showMessageDialog(this, "Enter Seat!");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Enter Category!");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(this, "Enter genre!");
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Enter rating!");
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(this, "Enter price! or Invalid input!");
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Enter audi!");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Enter time!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Enter Release Date!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Movie Name!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Enter Movie Code!");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Empty textboxes or Invalid Input!");
        }
    }//GEN-LAST:event_btnAddActionPerformed


    private void rlsDateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rlsDateBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rlsDateBoxActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // sets rating to rated r
        if (jRadioButton4.isSelected()) {
            rating = "Rated R";
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // sets rating to rated g
        if (jRadioButton5.isSelected()) {
            rating = "Rated G";
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // sets rating to pg13
        if (jRadioButton6.isSelected()) {
            rating = "PG13";
        }
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // sets rating to rated x
        if (jRadioButton7.isSelected()) {
            rating = "Rated X";
        }
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void genreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreComboBoxActionPerformed
        // gets the selected item from combobox, converts it to string and sets it to a variable
        genre = genreComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_genreComboBoxActionPerformed

    private void twodCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twodCheckBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_twodCheckBoxActionPerformed

    private void threedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threedCheckBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_threedCheckBoxActionPerformed

    private void seatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxActionPerformed
        // TODO add your handling code here:
        seat = seatComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_seatComboBoxActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // clear the text box, variables, combobox and checkbox
        movCodBox.setText("");
        movNamBox.setText("");
        rlsDateBox.setText("");
        priceBox.setText("");
        timeBox.setText("");
        rating = "";
        genreComboBox.setSelectedIndex(0);
        genre = "";
        buttonGroup2.clearSelection();
        twodCheckBox.setSelected(false);
        threedCheckBox.setSelected(false);
        seatComboBox.setSelectedIndex(0);
        seat = "";
        category = "";
        audiBox.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void searchPriceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPriceBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPriceBoxActionPerformed

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        // TODO add your handling code here:
        //gets the row and the column count
        int rowCount = jTable1.getRowCount();
        int colCount = jTable1.getColumnCount();

        //retrieves informaton from the table and inserts into 2D array
        String b[][] = new String[rowCount][colCount];
        for (int i = 0; i < b.length; i++) {
            for (int j = 0; j < b[i].length; j++) {
                b[i][j] = String.valueOf(jTable1.getValueAt(i, j));
            }
        }
        //creating a new class object and
        //calling a metehod to sort the array
        theaterFrame ms = new theaterFrame();
        ms.sort(b);

        //search for category in the sorted array
        try {
            if (srhCtgry.equals("2D")) {
                for (int i = 0; i < b.length - 1; i++) {
                    if (b[i][6].contains(srhCtgry)) {
                        JOptionPane.showMessageDialog(this, "The Movie is" + b[i][1] + " and the category is 2D.");
                        break;
                    }
                }
            }
            if (srhCtgry.equals("3D")) {
                for (int i = 0; i < b.length - 1; i++) {
                    if (b[i][6].contains(srhCtgry)) {
                        JOptionPane.showMessageDialog(this, "The Movie is" + b[i][1] + " and the category is 3D.");
                        break;
                    }
                }
            }
        } catch (NullPointerException e) {

        }

        //search for price in the sorted array
        if (!searchPriceBox.getText().isEmpty()) {
            pr = Integer.parseInt(searchPriceBox.getText());

            int high = b.length - 1;
            int result = ms.search(b, 0, high, pr);//calls the search method and stores the retrieved index in a variable
            if (result == -1) {
                JOptionPane.showMessageDialog(this, "Check Movie Price! \nMovie not found!");
            } else {
                JOptionPane.showMessageDialog(this, "The movie is: " + b[result][1] + " and the price is " + b[result][9]);
            }
        }


    }//GEN-LAST:event_btnViewDetailActionPerformed

    public void sort(String b[][]) {
        this.arr = b;//decalres the array into the instance variable
        this.length = b.length;//declares the length of the array to the instance variable
        this.tempArr = new String[length][];//initializes the instance array
        divideArray(0, length - 1);//call the method to sort the array
    }

    public void divideArray(int lowerIndex, int higherIndex) {
        if (lowerIndex < higherIndex) {
            //finding the middle index
            int middleIndex = lowerIndex + (higherIndex - lowerIndex) / 2;
            //it will sort the left side of an array
            divideArray(lowerIndex, middleIndex);
            //it will sort the right side of an array
            divideArray(middleIndex + 1, higherIndex);
            //calls the method to merge the sorted array
            mergeArray(lowerIndex, middleIndex, higherIndex);
        }
    }

    public void mergeArray(int lowerIndex, int middleIndex, int higherIndex) {
        for (int i = lowerIndex; i <= higherIndex; i++) {
            //putting the value of array into temporary array
            tempArr[i] = arr[i];
        }
        int i = lowerIndex;
        int j = middleIndex + 1;
        int k = lowerIndex;
        while (i <= middleIndex && j <= higherIndex) {
            if (Integer.parseInt(tempArr[i][9]) <= Integer.parseInt(tempArr[j][9])) {
                arr[k] = tempArr[i];
                i++;
            } else {
                arr[k] = tempArr[j];
                j++;
            }
            k++;
        }
        while (i <= middleIndex) {
            arr[k] = tempArr[i];
            k++;
            i++;
        }
    }

    public static int search(String b[][], int lowerIndex, int higherIndex, int value) {
        if (lowerIndex <= higherIndex) {
            int mid = (lowerIndex + higherIndex) / 2;
            if (Integer.parseInt(b[mid][9]) == value) {
                return mid;
            } else if (Integer.parseInt(b[mid][9]) < value) {
                return search(b, mid + 1, higherIndex, value);
            } else {
                return search(b, lowerIndex, mid - 1, value);
            }
        } else {
            return -1;
        }

    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //clears the textbox, checkbox and variables from the search section
        pr = 0;
        srhCtgry = "";
        searchPriceBox.setText("");
        buttonGroup1.clearSelection();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //calls the method to open a file
        openFile();

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void openFile() {
        try {
            File f = new File("file.txt");//changes to the directory where the file is located

            //first check if Desktop is supported by Platform or not
            if (!Desktop.isDesktopSupported()) {
                System.out.println("Desktop is not supported");
                return;
            }

            Desktop desktop = Desktop.getDesktop();
            if (f.exists()) {
                desktop.open(f);
            }

            //to open PDF file
            f = new File("file.pdf");
            if (f.exists()) {
                desktop.open(f);
            }
        } catch (IOException e) {

        }
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Input all the detail of a movie to add the movie information in the table. \n Press the 'ADD' button to add. \n Press the 'CLEAR' button to clear details. \n Press the 'EXIT' button to close the window.");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Select the Category. \n Input Movie Price. \n Press 'View Details' button to search. \n Press the 'Clear Details' button to clear the search fields.");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void movCodBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movCodBoxKeyTyped
        // only allows to enter letter and digit
        char inpBox = evt.getKeyChar();
        if (!(Character.isLetter(inpBox)) && !(Character.isDigit(inpBox))) {
            evt.consume();
        }
    }//GEN-LAST:event_movCodBoxKeyTyped

    private void movNamBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movNamBoxKeyTyped
        // only allows to enter letter
        char inpBox = evt.getKeyChar();
        if (!(Character.isLetter(inpBox))) {
            evt.consume();
        }
    }//GEN-LAST:event_movNamBoxKeyTyped

    private void rlsDateBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rlsDateBoxKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_rlsDateBoxKeyTyped

    private void audiBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_audiBoxKeyTyped
        // only allows to enter letter and digit
        char inpBox = evt.getKeyChar();
        if (!(Character.isLetter(inpBox)) && !(Character.isDigit(inpBox))) {
            evt.consume();
        }
    }//GEN-LAST:event_audiBoxKeyTyped

    private void priceBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceBoxKeyTyped
        // only allows to enter digit
        char inpBox = evt.getKeyChar();
        if (!(Character.isDigit(inpBox))) {
            evt.consume();
        }
    }//GEN-LAST:event_priceBoxKeyTyped

    private void searchPriceBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceBoxKeyTyped
        // only allows to enter digit
        char inpBox = evt.getKeyChar();
        if (!(Character.isDigit(inpBox))) {
            evt.consume();
        }
    }//GEN-LAST:event_searchPriceBoxKeyTyped

    private void searchTwodCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTwodCheckActionPerformed
        // TODO add your handling code here:
        if (searchTwodCheck.isSelected()) {
            srhCtgry = "2D";
        }
    }//GEN-LAST:event_searchTwodCheckActionPerformed

    private void searchThreedCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchThreedCheckActionPerformed
        // TODO add your handling code here:
        if (searchThreedCheck.isSelected()) {
            srhCtgry = "3D";
        }
    }//GEN-LAST:event_searchThreedCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(theaterFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(theaterFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(theaterFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(theaterFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new theaterFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField audiBox;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField movCodBox;
    private javax.swing.JTextField movNamBox;
    private javax.swing.JTextField priceBox;
    private javax.swing.JTextField rlsDateBox;
    private javax.swing.JTextField searchPriceBox;
    private javax.swing.JCheckBox searchThreedCheck;
    private javax.swing.JCheckBox searchTwodCheck;
    private javax.swing.JComboBox<String> seatComboBox;
    private javax.swing.JCheckBox threedCheckBox;
    private javax.swing.JTextField timeBox;
    private javax.swing.JCheckBox twodCheckBox;
    // End of variables declaration//GEN-END:variables
}
